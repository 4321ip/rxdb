{"version":3,"sources":["../../src/rx-collection-helper.ts"],"names":["flatClone","newRxError","runPluginHooks","getSingleDocument","writeSingle","overwritable","body","recover","result","e","then","pact","state","value","s","v","o","bind","observer","prototype","onFulfilled","onRejected","callback","_this","thenable","test","update","stage","shouldContinue","updateValue","reject","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","createRxCollectionStorageInstances","collectionName","rxDatabase","storageInstanceCreationParams","instanceCreationOptions","multiInstance","Promise","all","storage","createStorageInstance","createKeyObjectStorageInstance","databaseName","name","getCollectionLocalInstanceName","options","storageInstance","localDocumentsStore","writeToStorageInstance","collection","writeRow","overwrite","toStorageInstance","previous","_handleToStorageInstance","undefined","document","database","lockedRun","writeResult","ret","_handleFromStorageInstance","err","useErr","primary","documentId","status","singleRes","args","id","pouchDbError","data","col","isDevMode","schema","fillPrimaryKey","_crypter","encrypt","hookParams","doc","noDecrypt","decrypt","fillObjectDataBeforeInsert","useJson","fillObjectWithDefaults"],"mappings":"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","sourcesContent":["import type {\n    BulkWriteRow,\n    RxCollection,\n    RxDatabase,\n    RxDocumentData,\n    RxStorageBulkWriteError,\n    RxStorageInstance,\n    RxStorageInstanceCreationParams,\n    RxStorageKeyObjectInstance\n} from './types';\nimport {\n    flatClone\n} from './util';\nimport {\n    newRxError\n} from './rx-error';\nimport { runPluginHooks } from './hooks';\nimport { getSingleDocument, writeSingle } from './rx-storage-helper';\nimport { RxCollectionBase } from './rx-collection';\nimport { overwritable } from './overwritable';\n\n\n/**\n * Every write access on the storage engine,\n * goes throught this method\n * so we can run hooks and resolve stuff etc.\n */\nexport async function writeToStorageInstance<RxDocumentType>(\n    collection: RxCollection<RxDocumentType, any> | RxCollectionBase<any, RxDocumentType, any>,\n    writeRow: BulkWriteRow<RxDocumentType>,\n    overwrite: boolean = false\n): Promise<\n    RxDocumentData<RxDocumentType>\n> {\n    const toStorageInstance: BulkWriteRow<any> = {\n        previous: writeRow.previous ? _handleToStorageInstance(collection, flatClone(writeRow.previous)) : undefined,\n        document: _handleToStorageInstance(collection, flatClone(writeRow.document))\n    };\n\n    while (true) {\n        try {\n            const writeResult = await collection.database.lockedRun(\n                () => writeSingle(\n                    collection.storageInstance,\n                    toStorageInstance\n                )\n            );\n            // on success, just return the result\n\n            const ret = _handleFromStorageInstance(collection, writeResult);\n            return ret;\n        } catch (err: any) {\n            const useErr: RxStorageBulkWriteError<RxDocumentType> = err as any;\n            const primary = useErr.documentId;\n            if (overwrite && useErr.status === 409) {\n                // we have a conflict but must overwrite\n                // so get the new revision\n                const singleRes = await collection.database.lockedRun(\n                    () => getSingleDocument(collection.storageInstance, primary)\n                );\n                if (!singleRes) {\n                    throw newRxError('SNH', { args: { writeRow } });\n                }\n                toStorageInstance.previous = singleRes;\n                // now we can retry\n            } else if (useErr.status === 409) {\n                throw newRxError('COL19', {\n                    collection: collection.name,\n                    id: primary,\n                    pouchDbError: useErr,\n                    data: writeRow\n                });\n            } else {\n                throw useErr;\n            }\n        }\n    }\n}\n\n/**\n * wrappers to process document data beofre/after it goes to the storage instnace.\n * Used to handle keycompression, encryption etc\n */\nexport function _handleToStorageInstance(\n    col: RxCollection | RxCollectionBase<any, any, any>,\n    data: any\n) {\n    // ensure primary key has not been changed\n    if (overwritable.isDevMode()) {\n        col.schema.fillPrimaryKey(data);\n    }\n\n    data = (col._crypter as any).encrypt(data);\n\n    const hookParams = {\n        collection: col,\n        doc: data\n    };\n    runPluginHooks('preWriteToStorageInstance', hookParams);\n\n    return hookParams.doc;\n}\n\nexport function _handleFromStorageInstance(\n    col: RxCollection | RxCollectionBase<any, any, any>,\n    data: any,\n    noDecrypt = false\n) {\n\n    const hookParams = {\n        collection: col,\n        doc: data\n    };\n    runPluginHooks('postReadFromInstance', hookParams);\n\n    if (noDecrypt) {\n        return hookParams.doc;\n    }\n\n    return (col._crypter as any).decrypt(hookParams.doc);\n}\n\n/**\n * fills in the default data.\n * This also clones the data.\n */\nexport function fillObjectDataBeforeInsert(\n    collection: RxCollection | RxCollectionBase<any>,\n    data: any\n): any {\n    let useJson = collection.schema.fillObjectWithDefaults(data);\n    useJson = collection.schema.fillPrimaryKey(useJson);\n\n    return useJson;\n}\n\n\nexport function getCollectionLocalInstanceName(collectionName: string): string {\n    return collectionName + '-local';\n}\n\n/**\n * Creates the storage instances that are used internally in the collection\n */\nexport async function createRxCollectionStorageInstances<RxDocumentType, Internals, InstanceCreationOptions>(\n    collectionName: string,\n    rxDatabase: RxDatabase,\n    storageInstanceCreationParams: RxStorageInstanceCreationParams<RxDocumentType, InstanceCreationOptions>,\n    instanceCreationOptions: InstanceCreationOptions\n): Promise<{\n    storageInstance: RxStorageInstance<RxDocumentType, Internals, InstanceCreationOptions>,\n    localDocumentsStore: RxStorageKeyObjectInstance<any, InstanceCreationOptions>\n}> {\n    storageInstanceCreationParams.multiInstance = rxDatabase.multiInstance;\n    const [\n        storageInstance,\n        localDocumentsStore\n    ] = await Promise.all([\n        rxDatabase.storage.createStorageInstance<RxDocumentType>(\n            storageInstanceCreationParams\n        ),\n        rxDatabase.storage.createKeyObjectStorageInstance({\n            databaseName: rxDatabase.name,\n            /**\n             * Use a different collection name for the local documents instance\n             * so that the local docs can be kept while deleting the normal instance\n             * after migration.\n             */\n            collectionName: getCollectionLocalInstanceName(collectionName),\n            options: instanceCreationOptions,\n            multiInstance: rxDatabase.multiInstance\n        })\n    ]);\n\n    return {\n        storageInstance,\n        localDocumentsStore\n    };\n}\n"],"file":"rx-collection-helper.js"}